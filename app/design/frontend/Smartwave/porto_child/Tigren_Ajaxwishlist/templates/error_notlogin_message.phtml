<?php
/**
 * @author    Tigren Solutions <info@tigren.com>
 * @copyright Copyright (c) 2022 Tigren Solutions <https://www.tigren.com>. All rights reserved.
 * @license   Open Software License ("OSL") v. 3.0
 */
?>
<style>
    .mb-ajaxsuite-popup-wrapper .mb-login-popup-title {
    padding: 20px 25px !important;
}
</style>
<?php $_product = $block->getProduct(); ?>
<style>
div#mb-ajaxsuite-popup-wrapper.mb-ajaxsuite-popup-wrapper.popmsg {
    max-width: 580px;
    max-height: inherit;
    height: 67% !important;
}
/*.mb-ajaxsuite-popup-wrapper .block-customer-login {
    width: 100% !important;
}
.mb-ajaxsuite-popup-wrapper .block-customer-login:after {
    background: #ffffff !important;
}*/
</style>
<div class="mb-login-popup" style="display:block;">
    <div class="mb-ajaxsuite-popup-border mb-ajaxlogin-popup mb-ajaxlogin-login">
        <div class="block block-customer-login">
            <div class="block-title">
                <strong id="block-customer-login-heading" role="heading"
                        aria-level="2"><?= $block->escapeHtml(__('Account Login')) ?></strong>
            </div>
            <form class="form form-login"
                  method="post"
                  id="ajax-login-form"
                  enctype="multipart/form-data" autocomplete="off">
                <?= $block->getBlockHtml('formkey'); ?>
                <fieldset class="fieldset login" data-hasrequired="<?= __('* Required Fields') ?>">
                    <div class="field email required">
                        <label class="label" for="email"><span><?= __('Email') ?></span></label>
                        <div class="control">
                            <input name="login[username]"
                                   value="" <?php //if ($block->isAutocompleteDisabled()) : ?> autocomplete="off"<?php //endif; ?>
                                   id="ajaxlogin-email" type="email" class="input-text" title="<?= __('Email') ?>"
                                   data-validate="{required:true, 'validate-email':true}">
                        </div>
                    </div>
                    <div class="field password required">
                        <label for="pass" class="label"><span><?= __('Password') ?></span></label>
                        <div class="control">
                            <input name="login[password]"
                                   type="password" <?php //if ($block->isAutocompleteDisabled()) : ?> autocomplete="off"<?php //endif; ?>
                                   class="input-text" id="ajaxlogin-pass" title="<?= __('Password') ?>"
                                   data-validate="{required:true, 'validate-password':true}">
<span toggle="#password-field" class="fa fa-fw fa-eye field_icon toggle-password"></span>
<script>
require(['jquery', 'jquery/ui'], function($){
  $(document).ready( function() {
      $("body").on('click', '.toggle-password', function() {
  $(this).toggleClass("fa-eye fa-eye-slash");
  var input = $("#ajaxlogin-pass");
  if (input.attr("type") === "password") {
    input.attr("type", "text");
  } else {
    input.attr("type", "password");
  }

});
});
});
</script>
                        </div>
                    </div>
                </fieldset>
                <div class="actions">
                    <div class="primary">
                        <button type="submit" class="action submit primary" name="login" id="login">
                            <span><?= __('Login') ?></span>
                        </button>
                    </div>
                </div>
				 <?php
$blockObj= $block->getLayout()->createBlock('Mageplaza\SocialLogin\Block\Popup\Social');
//echo $blockObj->getMyCustomMethod();
$availableSocials = $blockObj->getAvailableSocials();
$childBlock = $blockObj->getChildBlock('request.info');

    ?>
    <div class="block social-login-authentication-channel account-social-login">
        <div class="block-content">
            <?php foreach ($availableSocials as $key => $social): ?>
                <div class="actions-toolbar social-btn social-btn-actions-toolbar <?= $key ?>-login">
                    <a class="btn btn-block btn-social btn-<?= $block->getBtnKey($key) ?>"
                       data-mage-init='{"socialProvider": {"url": "<?= $social['login_url'] ?>", "label": "<?= __('Login By %1', $social['label']) ?>"}}'>
                        <span class="fa fa-<?= $block->getBtnKey($key) ?>"></span>
                        <?= __('Sign in with %1', $social['label']) ?>
                    </a>
                </div>
            <?php endforeach; ?>
        </div>
    </div>
<?php //endif; ?>

<style type="text/css">
    .request-popup{
        overflow-y: unset;
        max-width: 800px;
        left: 30%;
    }
    .request-popup .modal-header{
        padding: 0;
    }
    .request-popup .modal-header button.action-close{
        color: white;
        z-index: 100;
    }
    .request-popup .modal-content{
        padding: 0;
    }
</style>
                 <?php
				 
//$blockforgot= $block->getLayout()->createBlock('Tigren\Ajaxlogin\Block\Messages\Forgot\Error');


    ?>
                <div class="actions">
                    <div class="secondary">
                        <a class="action forgot" href="<?= $block->getForgotPasswordUrl() ?>">
                            <span><?= __('Forgot Your Password?') ?></span>
                        </a>
                    </div>
                </div>
            </form>
        </div>
        <div class="block block-new-customer">
            <div class="block-title">
                <strong>Register Now<?php  //$block->escapeHtml(__('Register Now')) ?></strong>
            </div>
            <div class="block-content" aria-labelledby="block-new-customer-heading">
                <p>Creating an account has many benefits: check out faster, keep more than one address, track orders and more.</p>
                <div class="actions-toolbar">
                    <div class="primary" style="background-color:#36656D !important;">
                        <a href="<?= $block->getUrl('customer/account/create'); ?>"
                           class="action create primary"><span><?= $block->escapeHtml(__('Create an Account')) ?></span></a>
                    </div>
<div class="block social-login-authentication-channel account-social-login">
        <div class="block-content">
            <?php foreach ($availableSocials as $key => $social): ?>
                <div class="actions-toolbar social-btn social-btn-actions-toolbar <?= $key ?>-login">
                    <a class="btn btn-block btn-social btn-<?= $block->getBtnKey($key) ?>"
                       data-mage-init='{"socialProvider": {"url": "<?= $social['login_url'] ?>", "label": "<?= __('Login By %1', $social['label']) ?>"}}'>
                        <span class="fa fa-<?= $block->getBtnKey($key) ?>"></span>
                        <?= __('Sign in with %1', $social['label']) ?>
                    </a>
                </div>
            <?php endforeach; ?>
        </div>
    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script>
define(
    [
    'jquery',
    'mage/translate',
    'jquery/ui',
    'mage/validation/validation',
    'tigren/ajaxsuite'
    ], function ($, $t) {
        'use strict';
        $.widget(
            'tigren.ajaxLogin', $.tigren.ajaxSuite, {
                options: {
                    ajaxLogin: {
                        ajaxGetPopupUrl: null,
                        ajaxLoginUrl: null,
                        ajaxSocialLoginUrl: null,
                        ajaxRegisterUrl: null,
                        ajaxForgotPasswordUrl: null,
                        ajaxLogoutUrl: null,
                        enabled: null,
                        urlRedirect: null,
                        slideAnimation: null,
                        socialLoginEnable: null,
                        facebookAppId: null,
                        ggPlusClientId: null,
                        ajaxTwitterUrl: null,
                        loginWrapperSelector: '#mb-ajaxlogin-wrapper',
                        loginElmSelector: 'a[href*="customer/account/login/"]',
                        forgotElmSelector: 'a[href*="customer/account/forgotpassword/"]',
                        registerElmSelector: 'a[href*="customer/account/create/"]',
                        logoutElmSelector: 'a[href*="customer/account/logout/"]',
                        btnCloseSelector: '#ajaxlogin_btn_close_popup',
                        btnToRegisterSelector: '#ajaxlogin_btn_to_register',
                        btnToLoginSelector: '#ajaxlogin_btn_to_login',
                        baseUrl: ''
                    }
                },

                _bind: function () {
                    if (this.options.ajaxSuite.enabled == true && this.options.ajaxLogin.enabled == true) {
                        this.initElements();
                        this.makeColor();
                        this.initEvents();
                    }
                },

                initElements: function () {
                    this.options.popupWrapper = $(this.options.popupWrapperSelector);
                    this.options.popup = $(this.options.popupSelector);
                    this.options.popupBlank = $(this.options.popupBlankSelector);
                    this.options.close = $(this.options.closePopupButtonSelector);
                    this.options.loginWrapper = $(this.options.ajaxLogin.loginWrapperSelector);
                    this.options.popupMessage = $('.mb-message-popup');
                },

                initEvents: function () {
                    var self = this;

                    //For social login
                    if (self.options.ajaxLogin.socialLoginEnable) {
                        // facebook
                        if (self.options.ajaxLogin.facebookAppId) {
                            (function (d, s, id) {
                                var js, fjs = d.getElementsByTagName(s)[0];
                                if (d.getElementById(id)) {
                                    return;
                                }
                                js = d.createElement(s);
                                js.id = id;
                                js.src = "//connect.facebook.net/en_US/sdk.js";
                                fjs.parentNode.insertBefore(js, fjs);
                            }(document, 'script', 'facebook-jssdk'));
                            window.fbAsyncInit = function () {
                                var appId = self.options.ajaxLogin.facebookAppId;
                                FB.init(
                                    {
                                        appId: appId,
                                        cookie: true,
                                        xfbml: true,
                                        version: 'v2.8'
                                    }
                                );
                                $('body').on(
                                    'click', '#facebook-login-btn', function (e) {
                                        e.preventDefault();
                                        if (appId) {
                                            self.fbLogin();
                                        } else {
                                            alert($t('You must input your Facebook App Id in configuration before.'));
                                        }
                                    }
                                );

                            };
                        }

                        // google plus
                        if (self.options.ajaxLogin.ggPlusClientId) {
                            (function () {
                                var po = document.createElement('script');
                                po.type = 'text/javascript';
                                po.async = true;
                                //                    po.src = 'https://apis.google.com/js/platform.js';
                                po.src = 'https://plus.google.com/js/client:platform.js';
                                var s = document.getElementsByTagName('script')[0];
                                s.parentNode.insertBefore(po, s);
                            })();
                            $('body').on(
                                'click', '#ggplus-login-btn', function (e) {
                                    e.preventDefault();
                                    self.ggPlusLogin();
                                }
                            );
                        }

                        // twitter
                        if ($('#twitter-login-btn').length > 0) {
                            $('body').on(
                                'click', '#twitter-login-btn', function (e) {
                                    e.preventDefault();
                                    self.twitterLogin();
                                }
                            );
                        }
                    }

                    $('body').on(
                        'click', self.options.ajaxLogin.loginElmSelector, function (e) {
                            e.preventDefault();
                            self.showSectionPopup('login');
                        }
                    );
                    $('body').on(
                        'click', self.options.ajaxLogin.registerElmSelector, function (e) {
                            e.preventDefault();
                            self.showSectionPopup('register');
                        }
                    );
                    $('body').on(
                        'click', self.options.ajaxLogin.forgotElmSelector, function (e) {
                            e.preventDefault();
                            self.showSectionPopup('forget');
                        }
                    );

                    $(self.options.ajaxLogin.logoutElmSelector).on(
                        'click', function (e) {
                            e.preventDefault();
                            e.stopPropagation();
                            self.ajaxLogoutPost();
                        }
                    );

                    $('body').on(
                        'click', self.options.ajaxLogin.btnCloseSelector, function (e) {
                            self.closePopup();
                        }
                    );
                    $('body').on(
                        'click', self.options.ajaxLogin.btnToRegisterSelector, function (e) {
                            e.preventDefault();
                            self.showSectionPopup('register');
                        }
                    );
                    $('body').on(
                        'click', self.options.ajaxLogin.btnToLoginSelector, function (e) {
                            e.preventDefault();
                            self.showSectionPopup('login');
                        }
                    );

                    //Submit
                    self.options.loginForm = self.options.loginWrapper.find('form#ajax-login-form');
                    if (self.options.loginForm) {
                        self.options.loginForm.mage(
                            'validation', {
                                radioCheckboxClosest: '.nested',
                                submitHandler: function (form) {
                                    self.closePopup();
                                    self.ajaxLoginPost($(form).serializeArray());
                                    return false;
                                }
                            }
                        );
                    }
                    self.options.registerForm = self.options.loginWrapper.find('form#ajax-register-form');
                    if (self.options.registerForm) {
                        self.options.registerForm.mage(
                            'validation', {
                                radioCheckboxClosest: '.nested',
                                submitHandler: function (form) {
                                    self.closePopup();
                                    self.ajaxRegistertPost($(form).serializeArray());
                                    return false;
                                }
                            }
                        );
                    }
                    self.options.forgetpasswordForm = self.options.loginWrapper.find('form.ajax-forgetpassword-form');
                    if (self.options.forgetpasswordForm) {
                        self.options.forgetpasswordForm.mage(
                            'validation', {
                                radioCheckboxClosest: '.nested',
                                submitHandler: function (form) {
                                    self.closePopup();
                                    self.ajaxForgotpasswordPost($(form).serializeArray());
                                    return false;
                                }
                            }
                        );
                    }
                },

                ajaxLoginPost: function (formData) {
                    var self = this;
                    $.ajax(
                        {
                            url: self.options.ajaxLogin.ajaxLoginUrl,
                            data: formData,
                            type: 'POST',
                            datatype: 'json',
                            beforeSend: function () {
                                if (self.isLoaderEnabled()) {
                                    $('body').trigger(self.options.ajaxSuite.processStart);
                                }
                            },
                            success: function (res) {
                                if (self.isLoaderEnabled()) {
                                    $('body').trigger(self.options.ajaxSuite.processStop);
                                }
                                if (res.html_popup) {
                                    self.options.popupMessage.html(res.html_popup);
                                    self.makeColor();
                                    self.showSectionPopup('message');

                                    if (res.error) {
                                        self.options.popupMessage.find('.mb-error-message').find('p.message').html(res.error);
                                    } else if (res.success) {
                                        self.options.popupMessage.find('.mb-successful-message').find('p.message').html(res.success);
                                        self.redirectAfterLogin();
                                    }
                                }
                            }
                        }
                    );
                },

                redirectAfterLogin: function () {
                    var baseUrl = this.options.ajaxLogin.baseUrl;
                    var customerPageUrl = baseUrl + 'customer/account';
                    var cartUrl = baseUrl + 'checkout/cart';
                    var wishlistUrl = baseUrl + 'wishlist';
                    if (this.options.ajaxLogin.urlRedirect == 0) {
                        setTimeout(
                            function () {
                                location.reload();
                            }, 1000
                        );
                    } else if (this.options.ajaxLogin.urlRedirect == 1) {
                        setTimeout(
                            function () {
                                window.location.replace(customerPageUrl);
                            }, 2000
                        );
                    } else if (this.options.ajaxLogin.urlRedirect == 2) {
                        setTimeout(
                            function () {
                                window.location.replace(baseUrl);
                            }, 2000
                        );
                    } else if (this.options.ajaxLogin.urlRedirect == 3) {
                        setTimeout(
                            function () {
                                window.location.replace(cartUrl);
                            }, 2000
                        );
                    } else if (this.options.ajaxLogin.urlRedirect == 4) {
                        setTimeout(
                            function () {
                                window.location.replace(wishlistUrl);
                            }, 2000
                        );
                    } else {
                        setTimeout(
                            function () {
                                window.location.replace(customerPageUrl);
                            }, 2000
                        );
                    }
                },

                fbLogin: function () {
                    var self = this;
                    FB.login(
                        function (response) {
                            if (response.status === 'connected') {
                                self.afterFacebookLogin();
                            }
                        }, {scope: 'public_profile, email'}
                    );
                },

                afterFacebookLogin: function () {
                    var self = this;
                    FB.api(
                        '/me', 'GET', {fields: 'id,name,email,first_name,last_name'}, function (response) {
                            var formData = {};
                            formData.firstname = response.first_name;
                            formData.lastname = response.last_name;
                            formData.email = response.email;
                            formData.password = 'Azebiz' + response.id;
                            formData.social_type = 'facebook';

                            $.ajax(
                                {
                                    url: self.options.ajaxLogin.ajaxSocialLoginUrl,
                                    data: formData,
                                    type: 'POST',
                                    datatype: 'json',
                                    beforeSend: function () {
                                        if (self.isLoaderEnabled()) {
                                            // do nothing
                                            $('body').trigger(self.options.ajaxSuite.processStart);
                                        }
                                    },
                                    success: function (res) {
                                        if (self.isLoaderEnabled()) {
                                            $('body').trigger(self.options.ajaxSuite.processStop);
                                        }
                                        if (res.html_popup) {
                                            self.options.popupMessage.html(res.html_popup);
                                            self.makeColor();
                                            self.showSectionPopup('message');
                                            if (res.error) {
                                                self.options.popupMessage.find('.mb-error-message').find('p.message').html(res.error);
                                            } else {
                                                self.options.popupMessage.find('.mb-successful-message').find('p.message').html($t('You have logged in with Facebook successfully. Please wait ...'));
                                                self.redirectAfterLogin();
                                            }
                                        }
                                    }
                                }
                            );
                        }
                    );
                },

                ggPlusLogin: function () {
                    var self = this;
                    var clientId = self.options.ajaxLogin.ggPlusClientId;
                    if (clientId) {
                        var params = {
                            clientid: clientId,
                            cookiepolicy: 'single_host_origin',
                            scope: 'email',
                            theme: 'dark',
                            callback: function (response) {
                                if (response['status']['signed_in'] && !response['_aa']) {
                                    self.afterGgPlusLogin();
                                }
                            }
                        };
                        gapi.auth.signIn(params);
                    } else {
                        alert($t('You must input your Google+ Client Id in configuration before.'));
                    }
                },

                afterGgPlusLogin: function () {
                    var self = this;
                    gapi.client.load(
                        'plus', 'v1', function () {
                            gapi.client.plus.people.get({userId: 'me'}).execute(
                                function (response) {
                                    if (response.emails) {
                                        var email;
                                        for (var i = 0; i < response.emails.length; i++) {
                                            if (response.emails[i].type === 'account') {
                                                email = response.emails[i].value;
                                                var formData = {};
                                                formData.firstname = response.name.givenName;
                                                formData.lastname = response.name.familyName;
                                                formData.email = email;
                                                formData.password = 'Azebiz' + response.id;
                                                formData.social_type = 'ggplus';

                                                $.ajax(
                                                    {
                                                        url: self.options.ajaxLogin.ajaxSocialLoginUrl,
                                                        data: formData,
                                                        type: 'POST',
                                                        datatype: 'json',
                                                        beforeSend: function () {
                                                            if (self.isLoaderEnabled()) {
                                                                $('body').trigger(self.options.ajaxSuite.processStart);
                                                            }
                                                        },
                                                        success: function (res) {
                                                            if (self.isLoaderEnabled()) {
                                                                $('body').trigger(self.options.ajaxSuite.processStop);
                                                            }
                                                            if (res.html_popup) {
                                                                self.options.popupMessage.html(res.html_popup);
                                                                self.makeColor();
                                                                self.showSectionPopup('message');
                                                                if (res.error) {
                                                                    self.options.popupMessage.find('.mb-error-message').find('p.message').html(res.error);
                                                                } else {
                                                                    self.options.popupMessage.find('.mb-successful-message').find('p.message').html($t('You have logged in with Google+ successfully. Please wait ...'));
                                                                    self.redirectAfterLogin();
                                                                }
                                                            }
                                                        }
                                                    }
                                                );
                                            }
                                        }
                                    } else if (response.message) {
                                        alert(response.message);
                                    }
                                }
                            );
                        }
                    );
                },

                twitterLogin: function () {
                    var self = this;

                    $.ajax(
                        {
                            url: self.options.ajaxLogin.ajaxTwitterUrl,
                            data: {},
                            type: 'POST',
                            datatype: 'json',
                            beforeSend: function () {
                                if (self.isLoaderEnabled()) {
                                    $('body').trigger(self.options.ajaxSuite.processStart);
                                }
                            },
                            success: function (res) {
                                if (self.isLoaderEnabled()) {
                                    $('body').trigger(self.options.ajaxSuite.processStop);
                                }

                                if (res.success) {
                                    self.closePopup();

                                    var centerX = ($(window).width() - 500) / 2;
                                    var myWindow = window.open(res.url, 'myTwitter', 'width=500,height=500,top=0,left=' + centerX);
                                } else {

                                }
                            }
                        }
                    );
                },

                ajaxRegistertPost: function (formData) {
                    var self = this;
                    $.ajax(
                        {
                            url: self.options.ajaxLogin.ajaxRegisterUrl,
                            data: formData,
                            type: 'POST',
                            datatype: 'json',
                            beforeSend: function () {
                                if (self.isLoaderEnabled()) {
                                    $('body').trigger(self.options.ajaxSuite.processStart);
                                }
                            },
                            success: function (res) {
                                if (self.isLoaderEnabled()) {
                                    $('body').trigger(self.options.ajaxSuite.processStop);
                                }
                                if (res.html_popup) {
                                    self.options.popupMessage.html(res.html_popup);
                                    self.makeColor();
                                    self.showSectionPopup('message');

                                    if (res.error) {
                                        self.options.popupMessage.find('.mb-error-message').find('p.message').html(res.error);
                                    } else if (res.success) {
                                        self.options.popupMessage.find('.mb-successful-message').find('p.message').html(res.success);
                                        if (res.reload == true) {
                                            self.redirectAfterLogin();
                                        }
                                    }
                                }
                            }
                        }
                    );
                },

                ajaxForgotpasswordPost: function (formData) {
                    var self = this;
                    $.ajax(
                        {
                            url: self.options.ajaxLogin.ajaxForgotPasswordUrl,
                            data: formData,
                            type: 'POST',
                            datatype: 'json',
                            beforeSend: function () {
                                if (self.isLoaderEnabled()) {
                                    $('body').trigger(self.options.ajaxSuite.processStart);
                                }
                            },
                            success: function (res) {
                                if (self.isLoaderEnabled()) {
                                    $('body').trigger(self.options.ajaxSuite.processStop);
                                }
                                if (res.html_popup) {
                                    self.options.popupMessage.html(res.html_popup);
                                    self.makeColor();
                                    self.showSectionPopup('message');

                                    if (res.error) {
                                        self.options.popupMessage.find('.mb-error-message').find('p.message').html(res.error);
                                    } else if (res.success) {
                                        self.options.popupMessage.find('.mb-successful-message').find('p.message').html(res.success);
                                    }
                                }
                            }
                        }
                    );
                },

                ajaxLogoutPost: function () {
                    var self = this;
                    $.ajax(
                        {
                            url: self.options.ajaxLogin.ajaxLogoutUrl,
                            type: 'POST',
                            data: {},
                            datatype: 'json',
                            beforeSend: function () {
                                if (self.isLoaderEnabled()) {
                                    $('body').trigger(self.options.ajaxSuite.processStart);
                                }
                            },
                            success: function (res) {
                                if (self.isLoaderEnabled()) {
                                    $('body').trigger(self.options.ajaxSuite.processStop);
                                }
                                if (res.html_popup) {
                                    self.options.popupMessage.html(res.html_popup);
                                    self.makeColor();
                                    self.showSectionPopup('message');

                                    if (res.error) {
                                        self.options.popupMessage.find('.mb-error-message').find('p.message').html(res.error);
                                    } else if (res.success) {
                                        self.options.popupMessage.find('.mb-successful-message').find('p.message').html(res.success);
                                        var baseUrl = self.options.ajaxLogin.baseUrl;
                                        setTimeout(
                                            function () {
                                                window.location.replace(baseUrl);
                                            }, 2000
                                        );
                                    }
                                }
                            }
                        }
                    );
                },

                showSectionPopup: function (section) {
                    var self = this;
                    var sectionSelector = '';
                    switch (section) {
                    case 'login':
                        sectionSelector = '.mb-login-popup';
                        break;
                    case 'register':
                        sectionSelector = '.mb-register-popup';
                        break;
                    case 'forget':
                        sectionSelector = '.mb-forgetpassword-popup';
                        break;
                    case 'message':
                        sectionSelector = '.mb-message-popup';
                        break;
                    default:
                        sectionSelector = '';
                        break;
                    }
                    if (sectionSelector) {
                        var section = this.options.loginWrapper.children(sectionSelector);
                        if (section.length) {
                            var wrapperDisplay = this.options.popupWrapper.css('display');
                            if (wrapperDisplay == 'none') {                     //Show popup
                                this.options.loginWrapper.children().hide();
                                section.show();
                                this.showElement(this.options.ajaxLogin.loginWrapperSelector);
                            } else {                                            //Switch between sections
                                this.options.loginWrapper.children().hide();
                                this.animationSlide(section);
                            }
                        }
                    }
                    self.makeColor();
                },

            }
        );

        return $.tigren.ajaxLogin;
    }
);

</script>
